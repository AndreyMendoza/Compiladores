
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left?leftLOWWHILEFORrightIFleftELSErightLEFT_ASSIGNrightEQ_ASSIGNleftRIGHT_ASSIGNleft~TILDEleftOROR2leftANDAND2leftUNOT!nonassocGTGELTLEEQNEleft+-left*/leftMODINT_DIVMATRIX_MULTleft:leftUMINUSrightPOWERleft$@nonassoc([LBBREAL INT STR_CONST SYMBOL LEFT_ASSIGN EQ_ASSIGN RIGHT_ASSIGN LBB GT GE LT LE EQ NE AND OR AND2 OR2 NLINE MOD INT_DIV COMMENT MATRIX_MULT POWER IF ELSE WHILE FOR IN FUNCTION TRUE FALSE NULL_CONST Inf NaN NAprog : exprlistemptyline : NLINE\n                 | emptyline NLINEexprlist : empty\n                | expr_or_assignexprlist : exprlist ';'\n                | exprlist emptylineexprlist : exprlist ';' expr_or_assign\n                | exprlist emptyline expr_or_assignexpr_or_assign : exprexpr_or_assign : SYMBOL EQ_ASSIGN expr_or_assignexpr_or_assign_nl : expr_or_assignexpr_or_assign_nl : emptyline expr_or_assignexpr : const_or_symbol\n            | binary_operation\n            | unary_operation\n            | statement_declarationexpr : expr RIGHT_ASSIGN SYMBOL\n            | SYMBOL LEFT_ASSIGN expr expr : '(' expr_or_assign ')'expr : expr '[' sublist ']' expr : expr LBB sublist ']' ']' expr : '{' exprlist '}' expr : FUNCTION '(' formlist ')' expr_or_assign_nl %prec LOW expr : SYMBOL '(' sublist ')' formlist : SYMBOLformlist : SYMBOL EQ_ASSIGN exprformlist : formlist ',' SYMBOLformlist : formlist ',' SYMBOL EQ_ASSIGN exprformlist : emptysublist : subsublist : sublist ',' subsub : emptysub : exprconst_or_symbol : SYMBOLconst_or_symbol : STR_CONSTconst_or_symbol : REALconst_or_symbol : INTconst_or_symbol : NULL_CONSTconst_or_symbol : TRUEconst_or_symbol : FALSEbinary_operation : expr '+' exprbinary_operation : expr '-' exprbinary_operation : expr '*' exprbinary_operation : expr POWER exprbinary_operation : expr MOD exprbinary_operation : expr INT_DIV exprbinary_operation :  expr '/' exprbinary_operation : expr ':' expr\n                        | expr '~' expr\n                        | expr '?' exprbinary_operation : expr LT exprbinary_operation : expr LE exprbinary_operation : expr EQ exprbinary_operation : expr NE exprbinary_operation : expr GE exprbinary_operation : expr GT exprbinary_operation : expr AND exprbinary_operation : expr OR exprbinary_operation : expr AND2 expr binary_operation : expr OR2 exprbinary_operation : expr MATRIX_MULT expr\n                        | expr '$' SYMBOL\n                        | expr '$' STR_CONST\n                        | expr '@' SYMBOL\n                        | expr '@' STR_CONSTunary_operation :  '-' expr %prec UMINUSunary_operation : '+' expr %prec UMINUSunary_operation :  '!' expr %prec UNOT\n                        | '~' expr %prec TILDE\n                        | '?' exprstatement_declaration : if_statement\n                             | for_statement\n                             | while_statementif_statement : IF '(' expr ')' expr_or_assign_nl else_statementelse_statement : empty\n                      | ELSE expr_or_assign_nl\n                      | NLINE else_statementfor_statement : FOR '(' SYMBOL IN expr ')' expr_or_assign_nl %prec FOR while_statement : WHILE '(' expr ')' expr_or_assign_nlempty : "
    
_lr_action_items = {';':([0,2,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,25,26,27,31,32,33,64,66,67,68,69,70,71,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,120,123,131,132,133,137,139,140,142,143,145,148,149,150,],[-81,31,-4,-5,-10,-35,-14,-15,-16,-17,-81,-36,-37,-38,-39,-40,-41,-72,-73,-74,-6,-7,-2,31,-68,-35,-67,-70,-71,-69,-8,-9,-3,-18,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-11,-19,-20,-23,-21,-25,-22,-24,-12,-81,-80,-13,-75,-76,-81,-77,-78,-79,]),'NLINE':([0,2,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,25,26,27,31,32,33,64,66,67,68,69,70,71,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,120,123,124,127,129,131,132,133,134,137,139,140,142,143,144,145,146,148,149,150,],[-81,33,-4,-5,-10,-35,-14,-15,-16,-17,-81,-36,-37,-38,-39,-40,-41,-72,-73,-74,-6,77,-2,33,-68,-35,-67,-70,-71,-69,-8,-9,-3,-18,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-11,-19,-20,-23,-21,-25,33,33,33,-22,-24,-12,77,145,-80,-13,-75,-76,33,145,33,-77,-78,-79,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,31,32,33,66,67,68,69,70,71,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,120,123,131,132,133,137,139,140,142,143,145,148,149,150,],[-81,0,-1,-4,-5,-10,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-6,-7,-2,-68,-35,-67,-70,-71,-69,-8,-9,-3,-18,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-11,-19,-20,-23,-21,-25,-22,-24,-12,-81,-80,-13,-75,-76,-81,-77,-78,-79,]),'SYMBOL':([0,11,12,20,21,22,23,24,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,72,73,74,77,121,124,125,126,127,128,129,134,141,144,146,],[6,6,6,67,67,67,67,67,6,6,-2,78,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,105,107,6,67,67,115,67,118,67,-3,67,6,135,67,6,67,6,6,67,6,6,]),'(':([0,6,11,12,13,20,21,22,23,24,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,67,72,74,77,121,124,126,127,128,129,134,141,144,146,],[11,62,11,11,65,11,11,11,11,11,72,73,74,11,11,-2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,62,11,11,-3,11,11,11,11,11,11,11,11,11,11,]),'{':([0,11,12,20,21,22,23,24,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,77,121,124,126,127,128,129,134,141,144,146,],[12,12,12,12,12,12,12,12,12,12,-2,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-3,12,12,12,12,12,12,12,12,12,12,]),'FUNCTION':([0,11,12,20,21,22,23,24,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,77,121,124,126,127,128,129,134,141,144,146,],[13,13,13,13,13,13,13,13,13,13,-2,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-3,13,13,13,13,13,13,13,13,13,13,]),'STR_CONST':([0,11,12,20,21,22,23,24,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,72,74,77,121,124,126,127,128,129,134,141,144,146,],[14,14,14,14,14,14,14,14,14,14,-2,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,106,108,14,14,14,14,14,-3,14,14,14,14,14,14,14,14,14,14,]),'REAL':([0,11,12,20,21,22,23,24,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,77,121,124,126,127,128,129,134,141,144,146,],[15,15,15,15,15,15,15,15,15,15,-2,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-3,15,15,15,15,15,15,15,15,15,15,]),'INT':([0,11,12,20,21,22,23,24,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,77,121,124,126,127,128,129,134,141,144,146,],[16,16,16,16,16,16,16,16,16,16,-2,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-3,16,16,16,16,16,16,16,16,16,16,]),'NULL_CONST':([0,11,12,20,21,22,23,24,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,77,121,124,126,127,128,129,134,141,144,146,],[17,17,17,17,17,17,17,17,17,17,-2,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-3,17,17,17,17,17,17,17,17,17,17,]),'TRUE':([0,11,12,20,21,22,23,24,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,77,121,124,126,127,128,129,134,141,144,146,],[18,18,18,18,18,18,18,18,18,18,-2,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-3,18,18,18,18,18,18,18,18,18,18,]),'FALSE':([0,11,12,20,21,22,23,24,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,77,121,124,126,127,128,129,134,141,144,146,],[19,19,19,19,19,19,19,19,19,19,-2,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-3,19,19,19,19,19,19,19,19,19,19,]),'-':([0,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,66,67,68,69,70,71,72,74,77,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,121,123,124,126,127,128,129,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,],[21,38,-35,-14,-15,-16,-17,21,21,-36,-37,-38,-39,-40,-41,21,21,21,21,21,-72,-73,-74,21,21,-2,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-68,-35,-67,38,38,38,21,21,-3,-18,38,-42,-43,-44,-45,-46,-47,-48,-49,38,38,38,38,38,38,38,38,38,38,38,38,-62,-63,-64,-65,-66,-11,38,-20,-23,38,38,-21,21,-25,21,21,21,21,21,-22,-24,-12,21,38,-81,38,-80,-13,21,-75,-76,21,-81,21,38,-77,-78,-79,]),'+':([0,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,66,67,68,69,70,71,72,74,77,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,121,123,124,126,127,128,129,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,],[20,37,-35,-14,-15,-16,-17,20,20,-36,-37,-38,-39,-40,-41,20,20,20,20,20,-72,-73,-74,20,20,-2,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-68,-35,-67,37,37,37,20,20,-3,-18,37,-42,-43,-44,-45,-46,-47,-48,-49,37,37,37,37,37,37,37,37,37,37,37,37,-62,-63,-64,-65,-66,-11,37,-20,-23,37,37,-21,20,-25,20,20,20,20,20,-22,-24,-12,20,37,-81,37,-80,-13,20,-75,-76,20,-81,20,37,-77,-78,-79,]),'!':([0,11,12,20,21,22,23,24,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,77,121,124,126,127,128,129,134,141,144,146,],[24,24,24,24,24,24,24,24,24,24,-2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-3,24,24,24,24,24,24,24,24,24,24,]),'~':([0,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,66,67,68,69,70,71,72,74,77,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,121,123,124,126,127,128,129,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,],[22,45,-35,-14,-15,-16,-17,22,22,-36,-37,-38,-39,-40,-41,22,22,22,22,22,-72,-73,-74,22,22,-2,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-68,-35,-67,-70,45,-69,22,22,-3,-18,45,-42,-43,-44,-45,-46,-47,-48,-49,-50,45,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-11,45,-20,-23,45,45,-21,22,-25,22,22,22,22,22,-22,-24,-12,22,45,-81,45,-80,-13,22,-75,-76,22,-81,22,45,-77,-78,-79,]),'?':([0,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,66,67,68,69,70,71,72,74,77,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,121,123,124,126,127,128,129,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,],[23,46,-35,-14,-15,-16,-17,23,23,-36,-37,-38,-39,-40,-41,23,23,23,23,23,-72,-73,-74,23,23,-2,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-68,-35,-67,-70,-71,-69,23,23,-3,-18,46,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-11,-19,-20,-23,46,46,-21,23,-25,23,23,23,23,23,-22,-24,-12,23,46,-81,46,-80,-13,23,-75,-76,23,-81,23,46,-77,-78,-79,]),'IF':([0,11,12,20,21,22,23,24,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,77,121,124,126,127,128,129,134,141,144,146,],[28,28,28,28,28,28,28,28,28,28,-2,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-3,28,28,28,28,28,28,28,28,28,28,]),'FOR':([0,11,12,20,21,22,23,24,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,77,121,124,126,127,128,129,134,141,144,146,],[29,29,29,29,29,29,29,29,29,29,-2,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-3,29,29,29,29,29,29,29,29,29,29,]),'WHILE':([0,11,12,20,21,22,23,24,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,77,121,124,126,127,128,129,134,141,144,146,],[30,30,30,30,30,30,30,30,30,30,-2,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-3,30,30,30,30,30,30,30,30,30,30,]),'}':([3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,25,26,27,31,32,33,64,66,67,68,69,70,71,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,120,123,131,132,133,137,139,140,142,143,145,148,149,150,],[-4,-5,-10,-35,-14,-15,-16,-17,-81,-36,-37,-38,-39,-40,-41,-72,-73,-74,-6,-7,-2,113,-68,-35,-67,-70,-71,-69,-8,-9,-3,-18,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-11,-19,-20,-23,-21,-25,-22,-24,-12,-81,-80,-13,-75,-76,-81,-77,-78,-79,]),')':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,62,63,65,66,67,68,69,70,71,78,79,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,123,130,131,132,133,135,136,137,138,139,140,142,143,145,147,148,149,150,],[-10,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-81,112,-81,-68,-35,-67,-70,-71,-69,-18,-34,-31,-33,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-11,-19,123,-20,-23,124,-26,-30,127,129,-21,-81,-25,-32,-22,-24,-12,-28,-27,-81,146,-80,-13,-75,-76,-81,-29,-77,-78,-79,]),'RIGHT_ASSIGN':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[34,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,-70,34,-69,-18,34,-42,-43,-44,-45,-46,-47,-48,-49,-50,34,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-11,34,-20,-23,34,34,-21,-25,-22,-24,-12,34,-81,34,-80,-13,-75,-76,-81,34,-77,-78,-79,]),'[':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[35,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,35,-35,35,35,35,35,-18,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-63,-64,-65,-66,-11,35,-20,-23,35,35,-21,-25,-22,-24,-12,35,-81,35,-80,-13,-75,-76,-81,35,-77,-78,-79,]),'LBB':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[36,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,36,-35,36,36,36,36,-18,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-63,-64,-65,-66,-11,36,-20,-23,36,36,-21,-25,-22,-24,-12,36,-81,36,-80,-13,-75,-76,-81,36,-77,-78,-79,]),'*':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[39,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,39,39,39,-18,39,39,39,-44,-45,-46,-47,-48,-49,39,39,39,39,39,39,39,39,39,39,39,39,-62,-63,-64,-65,-66,-11,39,-20,-23,39,39,-21,-25,-22,-24,-12,39,-81,39,-80,-13,-75,-76,-81,39,-77,-78,-79,]),'POWER':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[40,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,40,-35,40,40,40,40,-18,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-63,-64,-65,-66,-11,40,-20,-23,40,40,-21,-25,-22,-24,-12,40,-81,40,-80,-13,-75,-76,-81,40,-77,-78,-79,]),'MOD':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[41,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,41,41,41,-18,41,41,41,41,-45,-46,-47,41,-49,41,41,41,41,41,41,41,41,41,41,41,41,-62,-63,-64,-65,-66,-11,41,-20,-23,41,41,-21,-25,-22,-24,-12,41,-81,41,-80,-13,-75,-76,-81,41,-77,-78,-79,]),'INT_DIV':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[42,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,42,42,42,-18,42,42,42,42,-45,-46,-47,42,-49,42,42,42,42,42,42,42,42,42,42,42,42,-62,-63,-64,-65,-66,-11,42,-20,-23,42,42,-21,-25,-22,-24,-12,42,-81,42,-80,-13,-75,-76,-81,42,-77,-78,-79,]),'/':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[43,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,43,43,43,-18,43,43,43,-44,-45,-46,-47,-48,-49,43,43,43,43,43,43,43,43,43,43,43,43,-62,-63,-64,-65,-66,-11,43,-20,-23,43,43,-21,-25,-22,-24,-12,43,-81,43,-80,-13,-75,-76,-81,43,-77,-78,-79,]),':':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[44,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,44,44,44,-18,44,44,44,44,-45,44,44,44,-49,44,44,44,44,44,44,44,44,44,44,44,44,44,-63,-64,-65,-66,-11,44,-20,-23,44,44,-21,-25,-22,-24,-12,44,-81,44,-80,-13,-75,-76,-81,44,-77,-78,-79,]),'LT':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[47,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,47,47,47,-18,47,-42,-43,-44,-45,-46,-47,-48,-49,47,47,None,None,None,None,None,None,47,47,47,47,-62,-63,-64,-65,-66,-11,47,-20,-23,47,47,-21,-25,-22,-24,-12,47,-81,47,-80,-13,-75,-76,-81,47,-77,-78,-79,]),'LE':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[48,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,48,48,48,-18,48,-42,-43,-44,-45,-46,-47,-48,-49,48,48,None,None,None,None,None,None,48,48,48,48,-62,-63,-64,-65,-66,-11,48,-20,-23,48,48,-21,-25,-22,-24,-12,48,-81,48,-80,-13,-75,-76,-81,48,-77,-78,-79,]),'EQ':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[49,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,49,49,49,-18,49,-42,-43,-44,-45,-46,-47,-48,-49,49,49,None,None,None,None,None,None,49,49,49,49,-62,-63,-64,-65,-66,-11,49,-20,-23,49,49,-21,-25,-22,-24,-12,49,-81,49,-80,-13,-75,-76,-81,49,-77,-78,-79,]),'NE':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[50,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,50,50,50,-18,50,-42,-43,-44,-45,-46,-47,-48,-49,50,50,None,None,None,None,None,None,50,50,50,50,-62,-63,-64,-65,-66,-11,50,-20,-23,50,50,-21,-25,-22,-24,-12,50,-81,50,-80,-13,-75,-76,-81,50,-77,-78,-79,]),'GE':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[51,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,51,51,51,-18,51,-42,-43,-44,-45,-46,-47,-48,-49,51,51,None,None,None,None,None,None,51,51,51,51,-62,-63,-64,-65,-66,-11,51,-20,-23,51,51,-21,-25,-22,-24,-12,51,-81,51,-80,-13,-75,-76,-81,51,-77,-78,-79,]),'GT':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[52,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,52,52,52,-18,52,-42,-43,-44,-45,-46,-47,-48,-49,52,52,None,None,None,None,None,None,52,52,52,52,-62,-63,-64,-65,-66,-11,52,-20,-23,52,52,-21,-25,-22,-24,-12,52,-81,52,-80,-13,-75,-76,-81,52,-77,-78,-79,]),'AND':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[53,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,53,53,-69,-18,53,-42,-43,-44,-45,-46,-47,-48,-49,53,53,-52,-53,-54,-55,-56,-57,-58,53,-60,53,-62,-63,-64,-65,-66,-11,53,-20,-23,53,53,-21,-25,-22,-24,-12,53,-81,53,-80,-13,-75,-76,-81,53,-77,-78,-79,]),'OR':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[54,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,54,54,-69,-18,54,-42,-43,-44,-45,-46,-47,-48,-49,54,54,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-11,54,-20,-23,54,54,-21,-25,-22,-24,-12,54,-81,54,-80,-13,-75,-76,-81,54,-77,-78,-79,]),'AND2':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[55,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,55,55,-69,-18,55,-42,-43,-44,-45,-46,-47,-48,-49,55,55,-52,-53,-54,-55,-56,-57,-58,55,-60,55,-62,-63,-64,-65,-66,-11,55,-20,-23,55,55,-21,-25,-22,-24,-12,55,-81,55,-80,-13,-75,-76,-81,55,-77,-78,-79,]),'OR2':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[56,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,56,56,-69,-18,56,-42,-43,-44,-45,-46,-47,-48,-49,56,56,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-11,56,-20,-23,56,56,-21,-25,-22,-24,-12,56,-81,56,-80,-13,-75,-76,-81,56,-77,-78,-79,]),'MATRIX_MULT':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[57,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,57,57,57,-18,57,57,57,57,-45,-46,-47,57,-49,57,57,57,57,57,57,57,57,57,57,57,57,-62,-63,-64,-65,-66,-11,57,-20,-23,57,57,-21,-25,-22,-24,-12,57,-81,57,-80,-13,-75,-76,-81,57,-77,-78,-79,]),'$':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[58,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,58,-35,58,58,58,58,-18,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-63,-64,-65,-66,-11,58,-20,-23,58,58,-21,-25,-22,-24,-12,58,-81,58,-80,-13,-75,-76,-81,58,-77,-78,-79,]),'@':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,117,119,120,123,131,132,133,136,137,138,139,140,142,143,145,147,148,149,150,],[59,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,59,-35,59,59,59,59,-18,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-63,-64,-65,-66,-11,59,-20,-23,59,59,-21,-25,-22,-24,-12,59,-81,59,-80,-13,-75,-76,-81,59,-77,-78,-79,]),']':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,35,36,66,67,68,69,70,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,120,121,122,123,130,131,132,133,137,139,140,142,143,145,148,149,150,],[-10,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-81,-81,-68,-35,-67,-70,-71,-69,-18,-34,120,-31,-33,122,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-11,-19,-20,-23,-21,-81,131,-25,-32,-22,-24,-12,-81,-80,-13,-75,-76,-81,-77,-78,-79,]),',':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,35,36,62,65,66,67,68,69,70,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,123,130,131,132,133,135,136,137,139,140,142,143,145,147,148,149,150,],[-10,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-81,-81,-81,-81,-68,-35,-67,-70,-71,-69,-18,-34,121,-31,-33,121,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-11,-19,121,-20,-23,125,-26,-30,-21,-81,-25,-32,-22,-24,-12,-28,-27,-81,-80,-13,-75,-76,-81,-29,-77,-78,-79,]),'ELSE':([5,6,7,8,9,10,14,15,16,17,18,19,25,26,27,66,67,68,69,70,71,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,120,123,131,132,133,137,139,140,142,143,145,148,149,150,],[-10,-35,-14,-15,-16,-17,-36,-37,-38,-39,-40,-41,-72,-73,-74,-68,-35,-67,-70,-71,-69,-18,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-11,-19,-20,-23,-21,-25,-22,-24,-12,144,-80,-13,-75,-76,144,-77,-78,-79,]),'EQ_ASSIGN':([6,115,135,],[60,126,141,]),'LEFT_ASSIGN':([6,67,],[61,61,]),'IN':([118,],[128,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'exprlist':([0,12,],[2,64,]),'empty':([0,12,35,36,62,65,121,137,145,],[3,3,82,82,82,116,82,143,143,]),'expr_or_assign':([0,11,12,31,32,60,124,127,129,134,144,146,],[4,63,4,75,76,109,133,133,133,140,133,133,]),'expr':([0,11,12,20,21,22,23,24,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,121,124,126,127,128,129,134,141,144,146,],[5,5,5,66,68,69,70,71,5,5,79,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,5,110,79,117,119,79,5,136,5,138,5,5,147,5,5,]),'const_or_symbol':([0,11,12,20,21,22,23,24,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,121,124,126,127,128,129,134,141,144,146,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'binary_operation':([0,11,12,20,21,22,23,24,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,121,124,126,127,128,129,134,141,144,146,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'unary_operation':([0,11,12,20,21,22,23,24,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,121,124,126,127,128,129,134,141,144,146,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'statement_declaration':([0,11,12,20,21,22,23,24,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,121,124,126,127,128,129,134,141,144,146,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'if_statement':([0,11,12,20,21,22,23,24,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,121,124,126,127,128,129,134,141,144,146,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'for_statement':([0,11,12,20,21,22,23,24,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,121,124,126,127,128,129,134,141,144,146,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'while_statement':([0,11,12,20,21,22,23,24,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,72,74,121,124,126,127,128,129,134,141,144,146,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'emptyline':([2,64,124,127,129,144,146,],[32,32,134,134,134,134,134,]),'sublist':([35,36,62,],[80,83,111,]),'sub':([35,36,62,121,],[81,81,81,130,]),'formlist':([65,],[114,]),'expr_or_assign_nl':([124,127,129,144,146,],[132,137,139,148,150,]),'else_statement':([137,145,],[142,149,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> exprlist','prog',1,'p_prog_start','parser.py',37),
  ('emptyline -> NLINE','emptyline',1,'p_emptyline','parser.py',43),
  ('emptyline -> emptyline NLINE','emptyline',2,'p_emptyline','parser.py',44),
  ('exprlist -> empty','exprlist',1,'p_exprlist_1','parser.py',50),
  ('exprlist -> expr_or_assign','exprlist',1,'p_exprlist_1','parser.py',51),
  ('exprlist -> exprlist ;','exprlist',2,'p_exprlist_2','parser.py',56),
  ('exprlist -> exprlist emptyline','exprlist',2,'p_exprlist_2','parser.py',57),
  ('exprlist -> exprlist ; expr_or_assign','exprlist',3,'p_exprlist_3','parser.py',61),
  ('exprlist -> exprlist emptyline expr_or_assign','exprlist',3,'p_exprlist_3','parser.py',62),
  ('expr_or_assign -> expr','expr_or_assign',1,'p_expr_or_assign_1','parser.py',69),
  ('expr_or_assign -> SYMBOL EQ_ASSIGN expr_or_assign','expr_or_assign',3,'p_expr_or_assign_2','parser.py',73),
  ('expr_or_assign_nl -> expr_or_assign','expr_or_assign_nl',1,'p_expr_or_assign_nl_1','parser.py',77),
  ('expr_or_assign_nl -> emptyline expr_or_assign','expr_or_assign_nl',2,'p_expr_or_assign_nl_2','parser.py',81),
  ('expr -> const_or_symbol','expr',1,'p_expr_1','parser.py',87),
  ('expr -> binary_operation','expr',1,'p_expr_1','parser.py',88),
  ('expr -> unary_operation','expr',1,'p_expr_1','parser.py',89),
  ('expr -> statement_declaration','expr',1,'p_expr_1','parser.py',90),
  ('expr -> expr RIGHT_ASSIGN SYMBOL','expr',3,'p_expr_2','parser.py',94),
  ('expr -> SYMBOL LEFT_ASSIGN expr','expr',3,'p_expr_2','parser.py',95),
  ('expr -> ( expr_or_assign )','expr',3,'p_expr_3','parser.py',102),
  ('expr -> expr [ sublist ]','expr',4,'p_expr_4','parser.py',106),
  ('expr -> expr LBB sublist ] ]','expr',5,'p_expr_5','parser.py',110),
  ('expr -> { exprlist }','expr',3,'p_expr_6','parser.py',114),
  ('expr -> FUNCTION ( formlist ) expr_or_assign_nl','expr',5,'p_expr_7','parser.py',118),
  ('expr -> SYMBOL ( sublist )','expr',4,'p_expr_8','parser.py',122),
  ('formlist -> SYMBOL','formlist',1,'p_formlist_1','parser.py',128),
  ('formlist -> SYMBOL EQ_ASSIGN expr','formlist',3,'p_formlist_2','parser.py',132),
  ('formlist -> formlist , SYMBOL','formlist',3,'p_formlist_3','parser.py',136),
  ('formlist -> formlist , SYMBOL EQ_ASSIGN expr','formlist',5,'p_formlist_4','parser.py',141),
  ('formlist -> empty','formlist',1,'p_formlist_empty','parser.py',146),
  ('sublist -> sub','sublist',1,'p_sublist_1','parser.py',152),
  ('sublist -> sublist , sub','sublist',3,'p_sublist_2','parser.py',156),
  ('sub -> empty','sub',1,'p_sub_1','parser.py',161),
  ('sub -> expr','sub',1,'p_sub_2','parser.py',165),
  ('const_or_symbol -> SYMBOL','const_or_symbol',1,'p_const_or_symbol','parser.py',171),
  ('const_or_symbol -> STR_CONST','const_or_symbol',1,'p_const_or_string','parser.py',175),
  ('const_or_symbol -> REAL','const_or_symbol',1,'p_const_or_symbol_real','parser.py',179),
  ('const_or_symbol -> INT','const_or_symbol',1,'p_const_or_symbol_int','parser.py',183),
  ('const_or_symbol -> NULL_CONST','const_or_symbol',1,'p_const_or_symbol_null','parser.py',187),
  ('const_or_symbol -> TRUE','const_or_symbol',1,'p_const_or_symbol_true','parser.py',191),
  ('const_or_symbol -> FALSE','const_or_symbol',1,'p_const_or_symbol_false','parser.py',195),
  ('binary_operation -> expr + expr','binary_operation',3,'p_binary_operation_plus','parser.py',201),
  ('binary_operation -> expr - expr','binary_operation',3,'p_binary_operation_minus','parser.py',205),
  ('binary_operation -> expr * expr','binary_operation',3,'p_binary_operation_mult','parser.py',209),
  ('binary_operation -> expr POWER expr','binary_operation',3,'p_binary_operation_pow','parser.py',213),
  ('binary_operation -> expr MOD expr','binary_operation',3,'p_binary_operation_mod','parser.py',217),
  ('binary_operation -> expr INT_DIV expr','binary_operation',3,'p_binary_operation_int_div','parser.py',221),
  ('binary_operation -> expr / expr','binary_operation',3,'p_binary_operation_real_div','parser.py',225),
  ('binary_operation -> expr : expr','binary_operation',3,'p_binary_operation_other','parser.py',229),
  ('binary_operation -> expr ~ expr','binary_operation',3,'p_binary_operation_other','parser.py',230),
  ('binary_operation -> expr ? expr','binary_operation',3,'p_binary_operation_other','parser.py',231),
  ('binary_operation -> expr LT expr','binary_operation',3,'p_binary_operation_lt','parser.py',235),
  ('binary_operation -> expr LE expr','binary_operation',3,'p_binary_operation_le','parser.py',239),
  ('binary_operation -> expr EQ expr','binary_operation',3,'p_binary_operation_eq','parser.py',243),
  ('binary_operation -> expr NE expr','binary_operation',3,'p_binary_operation_ne','parser.py',247),
  ('binary_operation -> expr GE expr','binary_operation',3,'p_binary_operation_ge','parser.py',251),
  ('binary_operation -> expr GT expr','binary_operation',3,'p_binary_operation_gt','parser.py',255),
  ('binary_operation -> expr AND expr','binary_operation',3,'p_binary_operation_and','parser.py',259),
  ('binary_operation -> expr OR expr','binary_operation',3,'p_binary_operation_or','parser.py',263),
  ('binary_operation -> expr AND2 expr','binary_operation',3,'p_binary_operation_and2','parser.py',267),
  ('binary_operation -> expr OR2 expr','binary_operation',3,'p_binary_operation_4','parser.py',271),
  ('binary_operation -> expr MATRIX_MULT expr','binary_operation',3,'p_binary_operation_matrix','parser.py',275),
  ('binary_operation -> expr $ SYMBOL','binary_operation',3,'p_binary_operation_matrix','parser.py',276),
  ('binary_operation -> expr $ STR_CONST','binary_operation',3,'p_binary_operation_matrix','parser.py',277),
  ('binary_operation -> expr @ SYMBOL','binary_operation',3,'p_binary_operation_matrix','parser.py',278),
  ('binary_operation -> expr @ STR_CONST','binary_operation',3,'p_binary_operation_matrix','parser.py',279),
  ('unary_operation -> - expr','unary_operation',2,'p_unary_operation_uminus','parser.py',285),
  ('unary_operation -> + expr','unary_operation',2,'p_unary_operation_uplus','parser.py',289),
  ('unary_operation -> ! expr','unary_operation',2,'p_unary_operation_other','parser.py',293),
  ('unary_operation -> ~ expr','unary_operation',2,'p_unary_operation_other','parser.py',294),
  ('unary_operation -> ? expr','unary_operation',2,'p_unary_operation_other','parser.py',295),
  ('statement_declaration -> if_statement','statement_declaration',1,'p_statement_declaration','parser.py',301),
  ('statement_declaration -> for_statement','statement_declaration',1,'p_statement_declaration','parser.py',302),
  ('statement_declaration -> while_statement','statement_declaration',1,'p_statement_declaration','parser.py',303),
  ('if_statement -> IF ( expr ) expr_or_assign_nl else_statement','if_statement',6,'p_if_statement','parser.py',307),
  ('else_statement -> empty','else_statement',1,'p_else_statement','parser.py',311),
  ('else_statement -> ELSE expr_or_assign_nl','else_statement',2,'p_else_statement','parser.py',312),
  ('else_statement -> NLINE else_statement','else_statement',2,'p_else_statement','parser.py',313),
  ('for_statement -> FOR ( SYMBOL IN expr ) expr_or_assign_nl','for_statement',7,'p_for_statement','parser.py',317),
  ('while_statement -> WHILE ( expr ) expr_or_assign_nl','while_statement',5,'p_while_statement','parser.py',321),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',327),
]
